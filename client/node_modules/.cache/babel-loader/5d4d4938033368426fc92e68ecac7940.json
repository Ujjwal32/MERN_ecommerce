{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: []\n};\nconst fetchCartItems = createAsyncThunk('cart/fetchedItems', async () => {\n  const items = JSON.parse(localStorage.getItem('cartItems'));\n});\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducer: {\n    addedTocart: (state, action) => {\n      state.items = state.items.concat(action.payload);\n      localStorage.setItem('cart', JSON.stringify(state.items));\n    }\n  },\n  extraReducers: {}\n});\nexport const {\n  addedTocart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["E:/Study Material/Projects/Fullstack/e-commerce/client/src/features/cartSlice.js"],"names":["createAsyncThunk","createSlice","initialState","items","fetchCartItems","JSON","parse","localStorage","getItem","cartSlice","name","reducer","addedTocart","state","action","concat","payload","setItem","stringify","extraReducers","actions"],"mappings":"AAAA,SAAUA,gBAAV,EAA4BC,WAA5B,QAA+C,kBAA/C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,MAAMC,cAAc,GAAGJ,gBAAgB,CAAC,mBAAD,EAAsB,YAAY;AACrE,QAAMG,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAd;AACH,CAFsC,CAAvC;AAIA,MAAMC,SAAS,GAAGR,WAAW,CAAC;AAC1BS,EAAAA,IAAI,EAAE,MADoB;AAE1BR,EAAAA,YAF0B;AAG1BS,EAAAA,OAAO,EAAE;AACLC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC3BD,MAAAA,KAAK,CAACV,KAAN,GAAcU,KAAK,CAACV,KAAN,CAAYY,MAAZ,CAAmBD,MAAM,CAACE,OAA1B,CAAd;AACAT,MAAAA,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA4BZ,IAAI,CAACa,SAAL,CAAeL,KAAK,CAACV,KAArB,CAA5B;AACH;AAJI,GAHiB;AAS1BgB,EAAAA,aAAa,EAAE;AATW,CAAD,CAA7B;AAcA,OAAO,MAAM;AAAEP,EAAAA;AAAF,IAAkBH,SAAS,CAACW,OAAlC;AACP,eAAeX,SAAS,CAACE,OAAzB","sourcesContent":["import  { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    items: []\r\n}\r\n\r\nconst fetchCartItems = createAsyncThunk('cart/fetchedItems', async () => {\r\n    const items = JSON.parse(localStorage.getItem('cartItems'))\r\n})\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducer: {\r\n        addedTocart: (state,action) => {\r\n            state.items = state.items.concat(action.payload)\r\n            localStorage.setItem('cart',JSON.stringify(state.items))\r\n        }\r\n    },\r\n    extraReducers: {\r\n\r\n    }\r\n})\r\n\r\nexport const { addedTocart } = cartSlice.actions\r\nexport default cartSlice.reducer"]},"metadata":{},"sourceType":"module"}