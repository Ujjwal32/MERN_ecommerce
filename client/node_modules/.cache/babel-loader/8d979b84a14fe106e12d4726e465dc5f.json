{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  status: '',\n  user: []\n};\nexport const userLoggedIn = createAsyncThunk('user/loggedin', async details => {\n  axios.post('/user/login', details).then(res => {\n    sessionStorage.setItem('user-e-commerce', JSON.stringify(res.data));\n    console.log(res);\n    window.location.href = '/user/profile';\n  }).catch(err => {\n    console.log(err);\n  });\n});\nexport const fetchUser = createAsyncThunk('user/fetched', async () => {\n  const user = JSON.parse(sessionStorage.getItem('user-e-commerce'));\n  return user;\n});\nexport const updateUser = createAsyncThunk('user/updated', async (id, userdetails, {\n  rejectWithValue\n}) => {\n  console.log({\n    id,\n    userdetails\n  });\n  console.log('hell');\n  await axios.put(`/user/${id}`, userdetails).then(res => {\n    console.log(res.data);\n  });\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducer: {},\n  extraReducers: {\n    [fetchUser.pending]: (state, action) => {\n      state.status = 'Loading';\n    },\n    [fetchUser.fulfilled]: (state, action) => {\n      state.status = 'Success';\n      state.user = state.user.concat(action.payload);\n    },\n    [fetchUser.rejected]: (state, action) => {\n      state.status = 'rejected';\n    },\n    [updateUser.pending]: (state, action) => {\n      state.status = 'Loading';\n    },\n    [updateUser.fulfilled]: (state, action) => {\n      state.status = 'Success'; // state.user = state.user.concat(action.payload)\n    },\n    [updateUser.rejected]: (state, action) => {\n      state.status = 'rejected';\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"sources":["E:/Study Material/Projects/Fullstack/e-commerce/client/src/features/userSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","status","user","userLoggedIn","details","post","then","res","sessionStorage","setItem","JSON","stringify","data","console","log","window","location","href","catch","err","fetchUser","parse","getItem","updateUser","id","userdetails","rejectWithValue","put","userSlice","name","reducer","extraReducers","pending","state","action","fulfilled","concat","payload","rejected"],"mappings":"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","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    status: '',\r\n    user: []\r\n}\r\n\r\nexport const userLoggedIn = createAsyncThunk('user/loggedin', async (details)=> {\r\n    axios.post('/user/login', details).then(res => {\r\n        sessionStorage.setItem('user-e-commerce',JSON.stringify(res.data));\r\n        console.log(res)\r\n        window.location.href = '/user/profile'\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n})\r\nexport const fetchUser = createAsyncThunk('user/fetched', async () => {\r\n    const user = JSON.parse(sessionStorage.getItem('user-e-commerce'))\r\n    return user\r\n})\r\nexport const updateUser = createAsyncThunk('user/updated', async (id,userdetails,{rejectWithValue}) => {\r\n    console.log({id,userdetails})\r\n    console.log('hell')\r\n    await axios.put(`/user/${id}`,userdetails).then( res => {\r\n        console.log(res.data)\r\n    })\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducer: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchUser.pending]: (state,action) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [fetchUser.fulfilled]: (state,action) => {\r\n            state.status = 'Success';\r\n            state.user = state.user.concat(action.payload)\r\n        },\r\n        [fetchUser.rejected]: (state,action) => {\r\n            state.status = 'rejected'\r\n        },\r\n        [updateUser.pending]: (state,action) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [updateUser.fulfilled]: (state,action) => {\r\n            state.status = 'Success';\r\n            // state.user = state.user.concat(action.payload)\r\n        },\r\n        [updateUser.rejected]: (state,action) => {\r\n            state.status = 'rejected'\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport default userSlice.reducer"]},"metadata":{},"sourceType":"module"}