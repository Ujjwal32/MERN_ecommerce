{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const products = await axios.get('/products?page=1&limit=5').then(res => {\n    return res.data.result;\n  });\n  const category = await axios.get('/category').then(res => {\n    return res.data.result;\n  });\n  return {\n    products,\n    category\n  };\n});\nexport const postProducts = createAsyncThunk('products/postProducts', async data => {\n  var _sessionStorage$getIt;\n\n  const token = JSON.parse((_sessionStorage$getIt = sessionStorage.getItem('user-e-commerce')) === null || _sessionStorage$getIt === void 0 ? void 0 : _sessionStorage$getIt.token);\n  const products = await axios.post('/products', data, {\n    headers: {\n      \"x-auth\": token,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    var _res$data;\n\n    if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.msg) === 'Successfully added!') {\n      window.location.href = '/admin/products';\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n  return products;\n});\nconst initialState = {\n  status: '',\n  products: [],\n  category: []\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducer: {},\n  extraReducers: {\n    [fetchProducts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.products = state.products.concat(action.payload.products);\n      state.category = state.products.concat(action.payload.category);\n    },\n    [fetchProducts.rejected]: (state, action) => {\n      state.status = 'failed';\n    },\n    [postProducts.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.products = state.products.concat(action.payload);\n    },\n    [postProducts.rejected]: (state, action) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"sources":["E:/Study Material/Projects/Fullstack/e-commerce/client/src/features/productSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchProducts","products","get","then","res","data","result","category","postProducts","token","JSON","parse","sessionStorage","getItem","post","headers","msg","window","location","href","catch","err","console","log","initialState","status","productSlice","name","reducer","extraReducers","pending","state","action","fulfilled","concat","payload","rejected"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async ()=> {\r\n    const products = await axios.get('/products?page=1&limit=5').then( res => {\r\n        return res.data.result\r\n    })\r\n    const category = await axios.get('/category').then( res => {\r\n        return res.data.result\r\n    })\r\n    return {products,category}\r\n})\r\n\r\nexport const postProducts = createAsyncThunk('products/postProducts', async (data)=> {\r\n    const token = JSON.parse(sessionStorage.getItem('user-e-commerce')?.token)\r\n    const products = await axios.post('/products',data,{ headers: {\r\n        \"x-auth\": token,\r\n        \"Content-Type\": \"application/json\"\r\n      }}).then(res => {\r\n        if(res.data?.msg === 'Successfully added!'){\r\n          window.location.href = '/admin/products'\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    return products\r\n})\r\n\r\n\r\nconst initialState = {\r\n    status: '',\r\n    products: [],\r\n    category: []\r\n}\r\n\r\nconst productSlice = createSlice({\r\n    name: \"product\",\r\n    initialState,\r\n    reducer: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchProducts.pending]: (state,action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchProducts.fulfilled]: (state,action) => {\r\n            state.status = 'success'\r\n            state.products = state.products.concat(action.payload.products)\r\n            state.category = state.products.concat(action.payload.category)\r\n        },\r\n        [fetchProducts.rejected]: (state,action) => {\r\n            state.status = 'failed'\r\n        },\r\n        [postProducts.fulfilled]: (state,action) => {\r\n            state.status = 'success'\r\n            state.products = state.products.concat(action.payload)\r\n        },\r\n        [postProducts.rejected]: (state,action) => {\r\n            state.status = 'failed'\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport default productSlice.reducer"]},"metadata":{},"sourceType":"module"}