{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const products = await axios.get('/products?page=1&limit=5').then(res => {\n    return res.data.result;\n  });\n  return products;\n});\nconst initialState = {\n  status: '',\n  products: []\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducer: {},\n  extraReducers: {\n    [fetchProducts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.products = state.products.concat(action.payload);\n    },\n    [fetchProducts.rejected]: (state, action) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"sources":["E:/Study Material/Projects/Fullstack/e-commerce/client/src/features/productSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchProducts","products","get","then","res","data","result","initialState","status","productSlice","name","reducer","extraReducers","pending","state","action","fulfilled","concat","payload","rejected"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,wBAAD,EAA2B,YAAW;AAC/E,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,0BAAV,EAAsCC,IAAtC,CAA4CC,GAAG,IAAI;AACtE,WAAOA,GAAG,CAACC,IAAJ,CAASC,MAAhB;AACH,GAFsB,CAAvB;AAGA,SAAOL,QAAP;AACH,CAL4C,CAAtC;AAQP,MAAMM,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBP,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAKA,MAAMQ,YAAY,GAAGX,WAAW,CAAC;AAC7BY,EAAAA,IAAI,EAAE,SADuB;AAE7BH,EAAAA,YAF6B;AAG7BI,EAAAA,OAAO,EAAE,EAHoB;AAM7BC,EAAAA,aAAa,EAAE;AACX,KAACZ,aAAa,CAACa,OAAf,GAAyB,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACvCD,MAAAA,KAAK,CAACN,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACR,aAAa,CAACgB,SAAf,GAA2B,CAACF,KAAD,EAAOC,MAAP,KAAkB;AACzCD,MAAAA,KAAK,CAACN,MAAN,GAAe,SAAf;AACAM,MAAAA,KAAK,CAACb,QAAN,GAAiBa,KAAK,CAACb,QAAN,CAAegB,MAAf,CAAsBF,MAAM,CAACG,OAA7B,CAAjB;AACH,KAPU;AAQX,KAAClB,aAAa,CAACmB,QAAf,GAA0B,CAACL,KAAD,EAAOC,MAAP,KAAkB;AACxCD,MAAAA,KAAK,CAACN,MAAN,GAAe,QAAf;AACH;AAVU;AANc,CAAD,CAAhC;AAqBA,eAAeC,YAAY,CAACE,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async ()=> {\r\n    const products = await axios.get('/products?page=1&limit=5').then( res => {\r\n        return res.data.result\r\n    })\r\n    return products\r\n})\r\n\r\n\r\nconst initialState = {\r\n    status: '',\r\n    products: [],\r\n}\r\n\r\nconst productSlice = createSlice({\r\n    name: \"product\",\r\n    initialState,\r\n    reducer: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchProducts.pending]: (state,action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchProducts.fulfilled]: (state,action) => {\r\n            state.status = 'success'\r\n            state.products = state.products.concat(action.payload)\r\n        },\r\n        [fetchProducts.rejected]: (state,action) => {\r\n            state.status = 'failed'\r\n        }   \r\n    }\r\n})\r\n\r\n\r\nexport default productSlice.reducer"]},"metadata":{},"sourceType":"module"}