{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study Material\\\\Projects\\\\Fullstack\\\\e-commerce\\\\client\\\\src\\\\components\\\\ProtectedAdmin.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedAdmin = ({\n  component: Component,\n  ...rest\n}) => {\n  var _loggedInUser$user;\n\n  const loggedInUser = JSON.parse(sessionStorage.getItem('user-e-commerce'));\n  const role = loggedInUser && ((_loggedInUser$user = loggedInUser.user) === null || _loggedInUser$user === void 0 ? void 0 : _loggedInUser$user.role);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (role === 'admin') {\n        return /*#__PURE__*/_jsxDEV(Component, { ...rest,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/forbidden',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedAdmin;\nexport default ProtectedAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedAdmin\");","map":{"version":3,"sources":["E:/Study Material/Projects/Fullstack/e-commerce/client/src/components/ProtectedAdmin.js"],"names":["React","Redirect","Route","ProtectedAdmin","component","Component","rest","loggedInUser","JSON","parse","sessionStorage","getItem","role","user","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAsC;AAAA;;AACzD,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAX,CAArB;AACA,QAAMC,IAAI,GAAGL,YAAY,2BAAIA,YAAY,CAACM,IAAjB,uDAAI,mBAAmBD,IAAvB,CAAzB;AACA,sBACI,QAAC,KAAD,OAAWN,IAAX;AAAiB,IAAA,MAAM,EACnBQ,KAAK,IAAI;AACL,UAAGF,IAAI,KAAK,OAAZ,EAAoB;AAChB,4BAAO,QAAC,SAAD,OAAeN,IAAf;AAAA,aAAyBQ;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EACf;AACEC,YAAAA,QAAQ,EAAE,YADZ;AAEEC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADT;AAFT;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH;AACJ;AAdL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArBD;;KAAMf,c;AAuBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nconst ProtectedAdmin = ({ component: Component, ...rest}) => {\r\n    const loggedInUser = JSON.parse(sessionStorage.getItem('user-e-commerce'))\r\n    const role = loggedInUser && loggedInUser.user?.role\r\n    return(\r\n        <Route {...rest} render ={\r\n            props => {\r\n                if(role === 'admin'){\r\n                    return <Component {...rest} {...props}/>\r\n                } else {\r\n                    return <Redirect to={\r\n                        {\r\n                          pathname: '/forbidden',\r\n                          state: {\r\n                              from: props.location\r\n                          }\r\n                        }\r\n                    } />\r\n                }\r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedAdmin\r\n"]},"metadata":{},"sourceType":"module"}