{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  status: '',\n  user: []\n};\nexport const userLoggedIn = createAsyncThunk('user/loggedin', async details => {\n  axios.post('/user/login', details).then(res => {\n    if (res.data.msg === 'success') {\n      sessionStorage.setItem('user-e-commerce', JSON.stringify(res.data));\n      window.location.href = '/user/profile';\n    } else if (res.data.msg === 'Password or email mismatched!') {\n      alert('Password or email mismatched!');\n    } else {\n      alert('User not found');\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n});\nexport const fetchUser = createAsyncThunk('user/fetched', async () => {\n  const user = JSON.parse(sessionStorage.getItem('user-e-commerce'));\n  return user;\n});\nexport const updateUser = createAsyncThunk('user/updated', async userdetails => {\n  const {\n    id,\n    details\n  } = userdetails;\n  await axios.put(`/user/${id}`, details).then(res => {\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducer: {},\n  extraReducers: {\n    [fetchUser.pending]: (state, action) => {\n      state.status = 'Loading';\n    },\n    [fetchUser.fulfilled]: (state, action) => {\n      state.status = 'Success';\n      state.user = state.user.concat(action.payload);\n    },\n    [fetchUser.rejected]: (state, action) => {\n      state.status = 'rejected';\n    },\n    [updateUser.pending]: (state, action) => {\n      state.status = 'Loading';\n    },\n    [updateUser.fulfilled]: (state, action) => {\n      state.status = 'Success'; // state.user = state.user.concat(action.payload)\n    },\n    [updateUser.rejected]: (state, action) => {\n      state.status = 'rejected';\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"sources":["E:/Study Material/Projects/Fullstack/e-commerce/client/src/features/userSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","status","user","userLoggedIn","details","post","then","res","data","msg","sessionStorage","setItem","JSON","stringify","window","location","href","alert","catch","err","console","log","fetchUser","parse","getItem","updateUser","userdetails","id","put","userSlice","name","reducer","extraReducers","pending","state","action","fulfilled","concat","payload","rejected"],"mappings":"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","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    status: '',\r\n    user: []\r\n}\r\n\r\nexport const userLoggedIn = createAsyncThunk('user/loggedin', async (details)=> {\r\n    axios.post('/user/login', details).then(res => {\r\n        if(res.data.msg === 'success'){\r\n            sessionStorage.setItem('user-e-commerce',JSON.stringify(res.data));\r\n            window.location.href = '/user/profile'\r\n        } else if(res.data.msg === 'Password or email mismatched!'){\r\n            alert('Password or email mismatched!')\r\n        } else {\r\n            alert('User not found')\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n})\r\nexport const fetchUser = createAsyncThunk('user/fetched', async () => {\r\n    const user = JSON.parse(sessionStorage.getItem('user-e-commerce'))\r\n    return user\r\n})\r\nexport const updateUser = createAsyncThunk('user/updated', async (userdetails) => {\r\n    const { id, details } = userdetails\r\n    await axios.put(`/user/${id}`,details).then( res => {\r\n        console.log(res.data)\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducer: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchUser.pending]: (state,action) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [fetchUser.fulfilled]: (state,action) => {\r\n            state.status = 'Success';\r\n            state.user = state.user.concat(action.payload)\r\n        },\r\n        [fetchUser.rejected]: (state,action) => {\r\n            state.status = 'rejected'\r\n        },\r\n        [updateUser.pending]: (state,action) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [updateUser.fulfilled]: (state,action) => {\r\n            state.status = 'Success';\r\n            // state.user = state.user.concat(action.payload)\r\n        },\r\n        [updateUser.rejected]: (state,action) => {\r\n            state.status = 'rejected'\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport default userSlice.reducer"]},"metadata":{},"sourceType":"module"}